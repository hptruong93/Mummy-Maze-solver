package process;

public class StaticState {

    private short[][] staticMaze;
    // 111111 last four digits: up, right, down, left
    // first two digits: key, traps
    private MummyWhite[] mummyWhite;
    private MummyRed[] mummyRed;
    private Scorpion[] sk;
    private ScorpionRed[] skRed;
    private Keyd[] key;
    private Human human;

    public StaticState(State state) {
        this.staticMaze = createStaticMaze(state.getMaze());
        this.mummyWhite = state.getMummyWhite();
        this.mummyRed = state.getMummyRed();
        this.sk = state.getSk();
        this.skRed = state.getSkRed();
        this.key = state.getKey();
        this.human = state.getHuman();
    }

    protected static short[][] createStaticMaze(short[][][] maze) {
        short[][] tam = new short[maze.length][maze[0].length];
        for (int i = 0; i < maze.length; i++) {
            for (int j = 0; j < maze[0].length; j++) {
                tam[i][j] = maze[i][j][0];
            }
        }
        return tam;
    }

    private boolean equals(StaticState statics) {

        for (int i = 0; i < this.getStaticMaze().length; i++) {
            for (int j = 0; j < this.getStaticMaze()[0].length; j++) {
                if (!(this.getStaticMaze()[i][j] == (statics.getStaticMaze()[i][j]))) {
                    return false;
                }
            }
        }

        if (this.getMummyWhite().length != statics.getMummyWhite().length) {
            return false;
        } else {
            for (int i = 0; i < this.getMummyWhite().length; i++) {
                if (!(this.getMummyWhite()[i].samePlace(statics.getMummyWhite()[i]))) {
                    return false;
                }
            }
        }

        if (this.getMummyRed().length != statics.getMummyRed().length) {
            return false;
        } else {
            for (int i = 0; i < this.getMummyRed().length; i++) {
                if (!(this.getMummyRed()[i].samePlace(statics.getMummyRed()[i]))) {
                    return false;
                }
            }
        }

        if (this.getSk().length != statics.getSk().length) {
            return false;
        } else {
            for (int i = 0; i < this.getSk().length; i++) {
                if (!(this.getSk()[i].samePlace(statics.getSk()[i]))) {
                    return false;
                }
            }
        }
        
        if (this.getSkRed().length != statics.getSkRed().length) {
            return false;
        } else {
            for (int i = 0; i < this.getSkRed().length; i++) {
                if (!(this.getSkRed()[i].samePlace(statics.getSkRed()[i]))) {
                    return false;
                }
            }
        }

        if (!(this.getHuman().samePlace(statics.getHuman()))) {
            return false;
        }
        return true;
    }

    protected boolean existing() {
        for (int i = 0; i < MainProcess.getExistedState().size(); i++) {
            if (this.equals(MainProcess.getExistedState().get(i))) {
                return true;
            }
        }
        return false;
    }

    //Setter and Getter Autogenerated
    public short[][] getStaticMaze() {
        return staticMaze;
    }

    public MummyWhite[] getMummyWhite() {
        return mummyWhite;
    }

    public MummyRed[] getMummyRed() {
        return mummyRed;
    }

    public Scorpion[] getSk() {
        return sk;
    }

    public Human getHuman() {
        return human;
    }

    public void setStaticMaze(short[][] staticMaze) {
        this.staticMaze = staticMaze;
    }

    public void setMummyWhite(MummyWhite[] mummyWhite) {
        this.mummyWhite = mummyWhite;
    }

    public void setMummyRed(MummyRed[] mummyRed) {
        this.mummyRed = mummyRed;
    }

    public void setSk(Scorpion[] sk) {
        this.sk = sk;
    }

    public void setHuman(Human human) {
        this.human = human;
    }

    public Keyd[] getKey() {
        return key;
    }

    public void setKey(Keyd[] key) {
        this.key = key;
    }

    public ScorpionRed[] getSkRed() {
        return skRed;
    }

    public void setSkRed(ScorpionRed[] skRed) {
        this.skRed = skRed;
    }
}
